with(IrOP, pie(percnot[-7], labels=Party, clockwise=TRUE,
col=c("blue", "red", "darkgreen", "black",
"grey", "lightgreen"), radius=1))
mytable <- table(iris$Species)
lbls <- paste(names(mytable), "\n", mytable, sep="")
op <- par(mfrow=c(1,1), mar = c(2.1, 2.1, 2.1, 2.1))
pie(mytable, labels = lbls,
main="Pie Chart of Species\n (with sample sizes)")
par(op)
library(effects)
data("BEPS", package="effects")
class(BEPS)
str(BEPS)
glimpse(BEPS)
summary(BEPS)
a1 <- ggplot(BEPS, aes(factor(Hague))) +
geom_bar(fill="blue") + ylab("") +
xlab("Hague (Conservative)") + ylim(0, 900)
a2 <- ggplot(BEPS, aes(factor(Blair))) +
geom_bar(fill="red") + ylab("") +
xlab("Blair (Labour)") + ylim(0, 900)
a3 <- ggplot(BEPS, aes(factor(Kennedy))) +
geom_bar(fill="yellow") + ylab("") +
xlab("Kennedy (Liberal)") + ylim(0, 900)
grid.arrange(a1, a2, a3, nrow=1)
library(likert)
df <- with(BEPS, data.frame(Hague=factor(Hague),
Blair=factor(Blair),
Kennedy=factor(Kennedy)))
plot(likert(df), type="bar", centered=F)
plot(likert(df), type="heat", centered=F)
plot(likert(df), type="density", centered=F)
b1 <- ggplot(BEPS, aes(factor(political.knowledge))) +
geom_bar(fill="tan2") + coord_flip() + ylab("") +
xlab("Knowledge of policies on Europe")
b2 <- ggplot(BEPS, aes(factor(Europe))) +
geom_bar(fill="lightgreen") + ylab("") +
xlab("Attitudes to European integration")
grid.arrange(b1, b2, nrow=1, widths=c(4, 8))
data(survey, package="MASS")
class(survey)
str(survey)
glimpse(survey)
summary(survey)
s1 <- ggplot(survey, aes(Sex)) + geom_bar() + ylab("")
s2 <- ggplot(survey, aes(W.Hnd)) + geom_bar() +
xlab("Writing hand") + ylab("")
s3 <- ggplot(survey, aes(Fold)) + geom_bar() +
xlab("Folding arms: arm on top") + ylab("")
s4 <- ggplot(survey, aes(Clap)) + geom_bar() +
xlab("Clapping: hand on top") + ylab("")
survey <- within(survey,
ExerN <- factor(Exer, levels=c("None", "Some", "Freq")))
s5 <- ggplot(survey, aes(ExerN)) + geom_bar() +
xlab("Exercise") + ylab("")
s6 <- ggplot(survey, aes(M.I)) + geom_bar() +
xlab("Height units") + ylab("")
survey <- within(survey, SmokeN <- factor(Smoke, levels=c("Never", "Occas", "Regul", "Heavy")))
s7 <- ggplot(survey, aes(SmokeN)) + geom_bar() +
xlab("Smoking") + ylab("")
grid.arrange(s1, s2, s3, s4, s5, s6, s7, ncol=3)
s1 <- ggplot(subset(survey, !is.na(Sex)), aes(Sex)) + geom_bar() + ylab("")
grid.arrange(s1, s2, s3, s4, s5, s6, s7, ncol=3)
summary(survey$W.Hnd)
data(UKSoccer, package="vcd")
class(UKSoccer)
str(UKSoccer)
glimpse(UKSoccer)
summary(UKSoccer)
PL <- data.frame(UKSoccer)
lx <- c("0", "1", "2", "3", "4 or more")
b1 <- ggplot(PL, aes(x=factor(Home), weight=Freq)) +
geom_bar(fill="firebrick1") +
ylab("") + xlab("Home Goals") +
scale_x_discrete(labels=lx) + ylim(0,150)
b2 <- ggplot(PL, aes(x=factor(Away), weight=Freq)) +
geom_bar(fill="cyan1") +
ylab("") + xlab("Away Goals") +
scale_x_discrete(labels=lx) + ylim(0,150)
grid.arrange(b1, b2, nrow=1)
xx <- 1:9
Ben <- data.frame(xx, pdf=log10(1+1/xx))
ggplot(Ben, aes(factor(xx), weight=pdf)) + geom_bar() +
xlab("") + ylab("") + ylim(0,0.35)
install.packages(c("waffle", "extrafont"))
library(waffle)
library(extrafont)
font_import() # mucho tiempo
fonts()[grep("Awesome", fonts())]
# Mac OSX
# loadfonts()
# Windows
loadfonts(device = "win")
library(emojifont)
load.fontawesome(font = "fontawesome-webfont.ttf")
waffle(c(57, 23, 15, 5), rows = 5, title = "Your basic waffle chart")
waffle(c(50, 30, 15, 5), rows = 5, use_glyph = "child", glyph_size = 6,
title = "Â¡Hice un infogrÃ¡fico utilizando R!")
waffle(c(50, 30, 15, 5), rows = 5, use_glyph = "music", glyph_size = 6,
title = "Â¡Hice un infogrÃ¡fico utilizando R!")
iron(
waffle(c(no = 80, yes = 20), rows = 5, use_glyph = "heart-o", glyph_size = 6,
colors = c("#c7d4b6", "#a3aabd"), title = "PaÃ­s A"),
waffle(c(no = 70, yes = 30), rows = 5, use_glyph = "car", glyph_size = 6,
colors = c("#c7d4b6", "#a3aabd"), title = "PaÃ­s B")
)
library(ggplot2)
library(dplyr)
library(VGAMdata)
data(oly12, package="VGAMdata")
class(oly12)
str(oly12)
glimpse(oly12)
summary(oly12)
ggplot(oly12, aes(Height, Weight)) + geom_point() +
ggtitle("Athletes at the London Olympics 2012")
ggplot(oly12, aes(Height, Weight)) + geom_point(alpha=.1) +
ggtitle("Athletes at the London Olympics 2012")
library(HistData)
data(DrinksWages, package="HistData")
class(DrinksWages)
str(DrinksWages)
glimpse(DrinksWages)
summary(DrinksWages)
ggplot(DrinksWages, aes(drinks/n, wage)) + geom_point() +
xlab("Proportion of drinkers") + xlim(0,1) + ylim(0,40)
with(DrinksWages, hist(n, breaks=0:max(n)))
with(DrinksWages, table(n))
with(DrinksWages, max(n[drinks==0]))
with(DrinksWages, trade[drinks==0 & n==max(n[drinks==0])])
with(DrinksWages, max(n[sober==0]))
with(DrinksWages, trade[sober==0 & n==max(n[sober==0])])
bigDW <- filter(DrinksWages, n > 4)
ggplot(bigDW, aes(drinks/n, wage)) + geom_point() +
xlab("Proportion of drinkers") + xlim(0,1) + ylim(0,40)
data(geyser, package="MASS")
class(geyser)
str(geyser)
glimpse(geyser)
summary(geyser)
ggplot(geyser, aes(duration, waiting)) + geom_point()
ggplot(geyser, aes(duration, waiting)) + geom_point() +
geom_density2d()
library(hdrcde)
par(mfrow=c(1,1))
par(mar=c(3.1, 4.1, 1.1, 2.1))
with(geyser, hdr.boxplot.2d(duration, waiting,
show.points=TRUE, prob=c(0.01,0.05,0.5,0.75)))
with(geyser, hdr.boxplot.2d(duration, waiting,
show.points=TRUE, prob=c(0.01)))
with(geyser, hdr.boxplot.2d(duration, waiting,
show.points=TRUE, prob=c(0.05)))
with(geyser, hdr.boxplot.2d(duration, waiting,
show.points=TRUE, prob=c(0.5)))
with(geyser, hdr.boxplot.2d(duration, waiting,
show.points=TRUE, prob=c(0.75)))
library("ggplot2movies")
class(movies)
str(movies)
glimpse(movies)
summary(movies)
ggplot(movies, aes(votes, rating)) + geom_point() + ylim(1,10)
ggplot(movies, aes(votes, rating)) + geom_point(alpha=.1) + ylim(1,10)
data(Cars93, package="MASS")
class(Cars93)
str(Cars93)
glimpse(Cars93)
summary(Cars93)
ggplot(Cars93, aes(Weight, MPG.city)) + geom_point() +
ylim(0,50)
ggplot(Cars93, aes(Weight, MPG.city)) + geom_point() +
geom_smooth(colour="green") + ylim(0,50)
data(father.son, package="UsingR")
class(father.son)
str(father.son)
glimpse(father.son)
summary(father.son)
ggplot(father.son, aes(fheight, sheight)) + geom_point() +
geom_smooth(method="lm", colour="red") +
geom_abline(slope=1, intercept=0)
data(father.son, package="UsingR")
m1 <- lm(sheight~fheight, father.son)
summary(m1)
par(mfrow=c(2,2))
plot(m1)
data(father.son, package="UsingR")
ggplot(father.son, aes(fheight, sheight)) + geom_point() +
geom_smooth(method="lm", colour="red", se=FALSE) +
geom_smooth()
ggplot(oly12, aes(Height, Weight)) +
geom_point(size = 1) + facet_wrap(~Sex, ncol=1)
oly12S <- within(oly12, Sport <- abbreviate(Sport, 12))
ggplot(oly12S, aes(Height, Weight)) +
geom_point(size = 1) + facet_wrap(~Sport) +
ggtitle("Weight and Height by Sport")
oly12JWW <- filter(oly12, Sport %in%
c("Judo", "Weightlifting", "Wrestling"))
ggplot(oly12JWW, aes(Height, Weight)) +
geom_point(size = 1) + facet_wrap(~Sport) +
ggtitle("Weight and Height by Sport")
library(GGally)
library(VGAMdata)
data(crime.us, package="VGAMdata")
class(crime.us)
str(crime.us)
glimpse(crime.us)
summary(crime.us)
crime.usR <- crime.us
names(crime.usR) <- gsub("*Rate", "", names(crime.usR))
names(crime.usR)[19:20] <- c("Larceny", "MotorVTheft")
ggpairs(crime.usR[, c(13:16, 18:20)],
title="Crime rates in the USA",
upper = list(contious='smooth_loess'),
diag=list(continuous='densityDiag'), axisLabels='none')
install.packages("ggpubr")
library(ggpubr)
cor.test(crime.usR[, c(13:16, 18:20)]$Rape,crime.usR[, c(13:16, 18:20)]$Murder)
cor.test(crime.usR[, c(13:16, 18:20)]$Larceny,crime.usR[, c(13:16, 18:20)]$Rape)
cor.test(crime.usR[, c(13:16, 18:20)]$Assault,crime.usR[, c(13:16, 18:20)]$Rape)
cor.test(crime.usR[, c(13:16, 18:20)]$Larceny,crime.usR[, c(13:16, 18:20)]$Robbery)
cor.test(crime.usR[, c(13:16, 18:20)]$Larceny,crime.usR[, c(13:16, 18:20)]$Murder)
cor.test(crime.usR[, c(13:16, 18:20)]$Larceny,crime.usR[, c(13:16, 18:20)]$Assault)
cor.test(crime.usR[, c(13:16, 18:20)]$Burglary,crime.usR[, c(13:16, 18:20)]$Murder)
library(car)
install.packages("gclus")
data(bank, package="gclus")
class(bank)
str(bank)
glimpse(bank)
summary(bank)
par(mar=c(1.1, 1.1, 1.1, 1.1))
spm(dplyr::select(bank, Length:Diagonal), pch=c(16, 16),
groups=bank$Status)
class(USJudgeRatings)
str(USJudgeRatings)
glimpse(USJudgeRatings)
summary(USJudgeRatings)
library(gclus)
judge.cor <- cor(USJudgeRatings)
judge.color <- dmat.color(judge.cor)
cpairs(USJudgeRatings, panel.colors=judge.color,
pch=".", gap=.5)
library(gpairs)
data(Leaves)
gpairs(Leaves[1:10], lower.pars=list(scatter='loess'))
library(ggplot2)
library(dplyr)
library(GGally)
load(file = "food.rda")
names(food) <- c("Fat", "Food.energy", "Carbohyd", "Protein",
"Cholest", "Wt", "Satur.Fat")
ggparcoord(data = food, columns = c(1:7), scale="uniminmax") +
xlab("") + ylab("")
food1 <- food/food$Wt
ggparcoord(data = food1, columns=c(1:5, 7), scale="uniminmax", alphaLines=0.2) +
xlab("") + ylab("")
food1 <- within(food1, fatX <- factor(ifelse(Fat > 0.75, 1, 0)))
ggparcoord(data = food1[order(food1$fatX),],
columns=c(1:5, 7), groupColumn="fatX",
scale="uniminmax") + xlab("") + ylab("") +
theme(legend.position = "none") + coord_flip()
ggplot(food1, aes(Protein, Carbohyd)) + geom_point()
ggparcoord(iris, columns = 1:4, groupColumn = "Species")
iris1 <- iris
names(iris1) <- c(abbreviate(names(iris)[1:4]), "Species")
summary(iris1)
a1 <- ggparcoord(iris1, columns = 1:4, alphaLines = 0.7,  groupColumn = "Species") + xlab("") + ylab("") + ggtitle("a1")
a2 <- ggparcoord(iris1, columns = 1:4, scale="uniminmax", alphaLines=0.7, groupColumn = "Species") + xlab("") + ylab("") + ggtitle("a2")
a3 <- ggparcoord(iris1, columns = 1:4, scale="globalminmax", alphaLines=0.7, groupColumn = "Species") + xlab("") + ylab("") + ggtitle("a3")
a4 <- ggparcoord(iris1, columns = 1:4, scale="center", scaleSummary="median", alphaLines=0.7, groupColumn = "Species") + xlab("") + ylab("") + ggtitle("a4")
gridExtra::grid.arrange(a1, a2, a3, a4)
hcav <- hclust(dist(USArrests), method="ave")
plot(hcav)
clu3 <- cutree(hcav, k=3)
clus <- factor(clu3)
usa1 <- cbind(USArrests, clus)
ggparcoord(usa1, columns=1:4, groupColumn="clus",
scale="uniminmax") +
geom_line(size = 1) +
xlab("") + ylab("")
hcav <- hclust(dist(scale(USArrests)), method="ave")
View(scale(USArrests))
plot(hcav)
clu3 <- cutree(hcav, k=3)
clus <- factor(clu3)
usa1 <- cbind(USArrests, clus)
ggparcoord(usa1, columns=1:4, groupColumn="clus",
scale="uniminmax") +
geom_line(size = 1) +
xlab("") + ylab("")
library(reshape2);data(nass.corn, package="agridat")
c1 <-melt(nass.corn, id=c("year", "state"))
c1 <-within(c1, StateV <- interaction(state, variable)); c2 <- dcast(c1, StateV~year)
ggparcoord(subset(c2[1:48,], c2[1:48,147]> 250000), columns=2:147, groupColumn="StateV",
scale="globalminmax") +xlab("Year") +ylab("Acres") +
scale_x_discrete(breaks=seq(1865, 2015, 10)) + theme(legend.position = "none")
data(uniranks, package="GDAdata")
names(uniranks)[c(5, 6, 8, 10, 11, 13)] <- c("AvTeach", "NSSTeach", "SpendperSt", "Careers",
"VAddScore", "NSSFeedb")
uniranks1 <- within(uniranks, StaffStu <- 1/(StudentStaffRatio))
ggparcoord(uniranks1, columns=c(5:8, 10:14), scale="uniminmax", alphaLines=1/3) +
xlab("") + ylab("") + theme(axis.ticks.y = element_blank(), axis.text.y = element_blank())
uniranks2 <- within(uniranks1,
Rus <- ifelse(UniGroup=="Russell", "Russell", "not"))
ggparcoord(uniranks2[order(uniranks2$Rus, decreasing=TRUE),],
columns=c(5:8, 10:14),
order=c(5,12,8,9,14,6,13,7,11,10),
groupColumn="Rus", scale="uniminmax") +
xlab("") + ylab("") +
theme(legend.position = "none",
axis.ticks.y = element_blank(),
axis.text.y = element_blank()) +
scale_colour_manual(values = c("grey","red"))
library(vcd)
ucb <- data.frame(UCBAdmissions)
class(ucb)
str(ucb)
glimpse(ucb)
summary(ucb)
ucb <- within(ucb, Accept <-
factor(Admit, levels=c("Rejected", "Admitted")))
doubledecker(xtabs(Freq~ Dept + Gender + Accept, data = ucb),
gp = gpar(fill = c("grey90", "steelblue")))
titanic <- as.data.frame(Titanic)
par(mfrow=c(2,2),  mar= c(4, 4, 0.1, 0.1))
mosaicplot(xtabs(Freq ~ Survived, data=titanic), main="")
mosaicplot(xtabs(Freq ~ Survived + Sex, data=titanic), main="")
mosaicplot(xtabs(Freq ~ Survived + Sex + Class, data=titanic), main="")
mosaicplot(xtabs(Freq ~ Survived + Sex + Class + Age, data=titanic), main="")
pairs(xtabs(Freq ~ ., data=titanic))
ggplot(titanic, aes(Survived, Freq, fill=Sex)) +
geom_bar(stat = "identity") +
facet_grid(Class ~ Sex + Age) + theme(legend.position="none")
library(vcd)
doubledecker(Survived ~ Sex, data = Titanic, gp=gpar(fill=c("grey90", "red")))
doubledecker(Survived ~ Class, data = Titanic, gp=gpar(fill=c("grey90", "red")))
doubledecker(Survived ~ Sex + Class, data = Titanic, gp=gpar(fill=c("grey90", "red")))
doubledecker(Survived ~ Class + Sex, data = Titanic, gp=gpar(fill=c("grey90", "red")))
mtcars.pca <- prcomp(mtcars[,c(1:7,10,11)], center = TRUE,scale. = TRUE)
summary(mtcars.pca)
library(devtools)
install_github("vqv/ggbiplot")
ggbiplot(iris.pca,ellipse=TRUE,groups=iris$Species)
ggplot(iris.pca,ellipse=TRUE,groups=iris$Species)
iris.pca <- prcomp(iris[,1:4], center = TRUE,scale. = TRUE)
summary(iris.pca)
par(mfrow=c(1,1),  mar= c(3.1, 4, 1.1, 1.1))
plot(iris.pca)
ggplot(iris.pca,ellipse=TRUE,groups=iris$Species)
ggbiplot(iris.pca,ellipse=TRUE,groups=iris$Species)
library(devtools)
install_github("vqv/ggbiplot")
par(mfrow=c(1,1),  mar= c(3.1, 4, 1.1, 1.1))
library("FactoMineR")
library("factoextra")
res.pca <- prcomp(iris[, -5], scale. = TRUE)
fviz_eig(res.pca)     # Scree plot
fviz_pca_ind(res.pca) # Graph of individuals
fviz_pca_var(res.pca) # Graph of variables
res.pca <- princomp(iris[, -5], cor = TRUE)
fviz_eig(res.pca)     # Scree plot
fviz_pca_ind(res.pca) # Graph of individuals
fviz_pca_var(res.pca) # Graph of variables
data(decathlon2)
head(decathlon2)
decathlon2.active <- decathlon2[1:23, 1:10]
head(decathlon2.active[, 1:6], 4)
res.pca <- PCA(decathlon2.active, graph = FALSE)
print(res.pca)
eig.val <- get_eigenvalue(res.pca)
eig.val
fviz_eig(res.pca, addlabels = TRUE, ylim = c(0, 50))
var <- get_pca_var(res.pca)
var
# Coordinates
head(var$coord)
# Cos2: quality on the factore map
head(var$cos2)
# Contributions to the principal components
head(var$contrib)
head(var$coord, 4)
fviz_pca_var(res.pca, col.var = "black")
head(var$cos2, 4)
library("corrplot")
corrplot(var$cos2, is.corr=FALSE)
# Total cos2 of variables on Dim.1 and Dim.2
fviz_cos2(res.pca, choice = "var", axes = 1:2)
# Color by cos2 values: quality on the factor map
fviz_pca_var(res.pca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping
)
# Change the transparency by cos2 values
fviz_pca_var(res.pca, alpha.var = "cos2")
head(var$contrib, 4)
library("corrplot")
corrplot(var$contrib, is.corr=FALSE)
# Contributions of variables to PC1
fviz_contrib(res.pca, choice = "var", axes = 1, top = 10)
# Contributions of variables to PC2
fviz_contrib(res.pca, choice = "var", axes = 2, top = 10)
fviz_pca_var(res.pca, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07")
)
# Create a grouping variable using kmeans
# Create 3 groups of variables (centers = 3)
set.seed(123)
res.km <- kmeans(var$coord, centers = 3, nstart = 25)
grp <- as.factor(res.km$cluster)
# Color variables by groups
fviz_pca_var(res.pca, col.var = grp,
palette = c("#0073C2FF", "#EFC000FF", "#868686FF"),
legend.title = "Cluster")
res.desc <- dimdesc(res.pca, axes = c(1,2), proba = 0.05)
# Description of dimension 1
res.desc$Dim.1
# Description of dimension 2
res.desc$Dim.2
ind <- get_pca_ind(res.pca)
ind
# Coordinates of individuals
head(ind$coord)
# Quality of individuals
head(ind$cos2)
# Contributions of individuals
head(ind$contrib)
fviz_pca_ind(res.pca)
fviz_pca_ind(res.pca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE # Avoid text overlapping (slow if many points)
)
fviz_pca_ind(res.pca, pointsize = "cos2",
pointshape = 21, fill = "#E7B800",
repel = TRUE # Avoid text overlapping (slow if many points)
)
fviz_cos2(res.pca, choice = "ind")
# Total contribution on PC1 and PC2
fviz_contrib(res.pca, choice = "ind", axes = 1:2)
head(iris, 3)
# The variable Species (index = 5) is removed
# before PCA analysis
iris.pca <- PCA(iris[,-5], graph = FALSE)
fviz_pca_ind(iris.pca,
geom.ind = "point", # show points only (nbut not "text")
col.ind = iris$Species, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE, # Concentration ellipses
legend.title = "Groups"
)
fviz_pca_ind(iris.pca, geom.ind = "point", col.ind = iris$Species,
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE, ellipse.type = "confidence",
legend.title = "Groups"
)
# Variables on dimensions 2 and 3
fviz_pca_var(res.pca, axes = c(2, 3))
# Individuals on dimensions 2 and 3
fviz_pca_ind(res.pca, axes = c(2, 3))
fviz_pca_var(res.pca, geom.var = c("point", "text"))
fviz_pca_biplot(iris.pca,
col.ind = iris$Species, palette = "jco",
addEllipses = TRUE, label = "var",
col.var = "black", repel = TRUE,
legend.title = "Species")
res.pca <- PCA(decathlon2, ind.sup = 24:27,
quanti.sup = 11:12, quali.sup = 13, graph=FALSE)
res.pca$quanti.sup
# Change color of variables
fviz_pca_var(res.pca,
col.var = "black",     # Active variables
col.quanti.sup = "red" # Suppl. quantitative variables
)
# Hide active variables on the plot,
# show only supplementary variables
fviz_pca_var(res.pca, invisible = "var")
# Hide supplementary variables
fviz_pca_var(res.pca, invisible = "quanti.sup")
res.pca$ind.sup
p <- fviz_pca_ind(res.pca, col.ind.sup = "blue", repel = TRUE)
p <- fviz_add(p, res.pca$quali.sup$coord, color = "red")
p
res.pca$quali
fviz_pca_ind(res.pca, habillage = 13,
addEllipses =TRUE, ellipse.type = "confidence",
palette = "jco", repel = TRUE)
library(readr)
library(stringr)
library(dplyr)
library(ggplot2)
library(ggthemes)
source("metadata.R",   encoding="UTF-8")
setwd("C:/Users/javie/OneDrive - INSTITUTO TECNOLOGICO AUTONOMO DE MEXICO/ITAM/6to semestre/Mineria de datos/mineria-de-datos-2022/limpieza/german")
source("metadata.R",   encoding="UTF-8")
source("utils.R",      encoding="UTF-8")
source("00-load.R",    encoding="UTF-8")
source("01-prepare.R", encoding="UTF-8")
source("02-clean.R",   encoding="UTF-8")
ggplot(data = german_data) +
geom_bar(mapping = aes(x = `personal_status_and_sex`, fill = `good_loan`), position = "fill")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
library(ggplot2)
library(ggthemes)
source("metadata.R",   encoding="UTF-8")
source("utils.R",      encoding="UTF-8")
source("00-load.R",    encoding="UTF-8")
source("01-prepare.R", encoding="UTF-8")
source("02-clean.R",   encoding="UTF-8")
ggplot(data = german_data) +
geom_bar(mapping = aes(x = `personal_status_and_sex`, fill = `good_loan`), position = "fill")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))
ggplot(data = german_data) +
geom_bar(mapping = aes(x = `good_loan`, fill = `credit_history`), position = "fill")
